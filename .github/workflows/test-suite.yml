name: Test suite
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  test-suite:
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.3', '7.4', '8.0', '8.1']

    name: Test suite
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(') }}
    env:
      EXTENSION_PATH: "my-own-modules/crowdsec-php-lib"
      JP_TEST_IP: "210.249.74.42"
      IPV6_TEST_IP: "2001:0db8:0000:85a3:0000:0000:ac1f:8001"
      IPV6_TEST_PROXY_IP: "2345:0425:2CA1:0000:0000:0567:5673:23b5"

    steps:
      - name: Clone DDEV files
        uses: actions/checkout@v2
        with:
          path: .ddev
          repository: julienloizelet/ddev-php
          ref: "main"

      - name: Install DDEV
        env:
          DDEV_VERSION: v1.21.1
        run: |
          # @see https://ddev.readthedocs.io/en/stable/#installationupgrade-script-linux-and-macos-armarm64-and-amd64-architectures
          sudo apt-get -qq update
          sudo apt-get -qq -y install libnss3-tools
          curl -LO https://raw.githubusercontent.com/drud/ddev/master/scripts/install_ddev.sh
          bash install_ddev.sh ${{env.DDEV_VERSION}}
          ddev config global --instrumentation-opt-in=false --omit-containers=dba,ddev-ssh-agent
          rm install_ddev.sh

      - name: Set PHP_VERSION_CODE env
        # used in some directory path and conventional file naming
        # Example : 7.4 => 74
        run: |
           echo "PHP_VERSION_CODE=$(echo php${{ matrix.php-version }} | sed 's/\.//g' )" >> $GITHUB_ENV


      - name: Start DDEV  with PHP ${{ matrix.php-version }}
        run: |
          cp .ddev/config_overrides/config.${{ env.PHP_VERSION_CODE }}.yaml .ddev/config.${{ env.PHP_VERSION_CODE }}.yaml
          cp .ddev/additional_docker_compose/docker-compose.crowdsec.yaml .ddev/docker-compose.crowdsec.yaml
          cp .ddev/additional_docker_compose/docker-compose.playwright.yaml .ddev/docker-compose.playwright.yaml
          mkdir ${{ github.workspace }}/cfssl
          cp -r .ddev/custom_files/crowdsec/cfssl/* ${{ github.workspace }}/cfssl
          ls -l ${{ github.workspace }}/cfssl
          ddev start

      - name: Set BOUNCER_KEY and PROXY_IP env
        run: |
          echo "BOUNCER_KEY=$(ddev create-bouncer)" >> $GITHUB_ENV
          echo "PROXY_IP=$(ddev find-ip ddev-router)" >> $GITHUB_ENV

      - name: Some DEBUG information
        run: |
          ddev --version
          ddev exec php -v
          ddev exec -s crowdsec crowdsec -version
          ddev php -r "echo phpversion('memcached');"

      - name: Clone PHP lib Crowdsec files
        uses: actions/checkout@v2
        with:
          path: my-own-modules/crowdsec-php-lib

      - name: Validate composer.json
        run: ddev composer validate --strict --working-dir ./${{env.EXTENSION_PATH}}

      - name: Install CrowdSec lib dependencies
        run: |
          ddev composer update --working-dir ./${{env.EXTENSION_PATH}}

      - name: Prepare PHP UNIT tests
        run: |
          ddev maxmind-download DEFAULT GeoLite2-City /var/www/html/${{env.EXTENSION_PATH}}/tests
          ddev maxmind-download DEFAULT GeoLite2-Country /var/www/html/${{env.EXTENSION_PATH}}/tests
          cd ${{env.EXTENSION_PATH}}/tests
          sha256sum -c GeoLite2-Country.tar.gz.sha256.txt
          sha256sum -c GeoLite2-City.tar.gz.sha256.txt
          tar -xf GeoLite2-Country.tar.gz
          tar -xf GeoLite2-City.tar.gz
          rm GeoLite2-Country.tar.gz GeoLite2-Country.tar.gz.sha256.txt GeoLite2-City.tar.gz GeoLite2-City.tar.gz.sha256.txt

      - name: Run "IP verification with file_get_contents" test
        run: |
          ddev exec BOUNCER_KEY=${{ env.BOUNCER_KEY }} AGENT_TLS_PATH=/var/www/html/cfssl LAPI_URL=https://crowdsec:8080 MEMCACHED_DSN=memcached://memcached:11211 REDIS_DSN=redis://redis:6379 /usr/bin/php ./${{env.EXTENSION_PATH}}/vendor/bin/phpunit --testdox --colors --exclude-group ignore ./${{env.EXTENSION_PATH}}/tests/Integration/IpVerificationTest.php

      - name: Run "IP verification with cURL" test
        run: |
          ddev exec BOUNCER_KEY=${{ env.BOUNCER_KEY }} AGENT_TLS_PATH=/var/www/html/cfssl USE_CURL=1 LAPI_URL=https://crowdsec:8080 MEMCACHED_DSN=memcached://memcached:11211 REDIS_DSN=redis://redis:6379 /usr/bin/php ./${{env.EXTENSION_PATH}}/vendor/bin/phpunit --testdox --colors --exclude-group ignore ./${{env.EXTENSION_PATH}}/tests/Integration/IpVerificationTest.php

      - name: Run "IP verification with TLS" test
        run: |
          ddev exec AGENT_TLS_PATH=/var/www/html/cfssl BOUNCER_TLS_PATH=/var/www/html/cfssl LAPI_URL=https://crowdsec:8080 MEMCACHED_DSN=memcached://memcached:11211 REDIS_DSN=redis://redis:6379 /usr/bin/php ./${{env.EXTENSION_PATH}}/vendor/bin/phpunit --testdox --colors --exclude-group ignore ./${{env.EXTENSION_PATH}}/tests/Integration/IpVerificationTest.php    

      - name: Run "Geolocation with file_get_contents" test
        run: |
          ddev exec BOUNCER_KEY=${{ env.BOUNCER_KEY }} AGENT_TLS_PATH=/var/www/html/cfssl LAPI_URL=https://crowdsec:8080  /usr/bin/php ./${{env.EXTENSION_PATH}}/vendor/bin/phpunit --testdox --colors --exclude-group ignore ./${{env.EXTENSION_PATH}}/tests/Integration/GeolocationTest.php

      - name: Run "Geolocation with cURL" test
        run: |
          ddev exec BOUNCER_KEY=${{ env.BOUNCER_KEY }} AGENT_TLS_PATH=/var/www/html/cfssl USE_CURL=1 LAPI_URL=https://crowdsec:8080  /usr/bin/php ./${{env.EXTENSION_PATH}}/vendor/bin/phpunit --testdox --colors --exclude-group ignore ./${{env.EXTENSION_PATH}}/tests/Integration/GeolocationTest.php    

      - name: Prepare Standalone Bouncer end-to-end tests
        run: |
          cd ${{ github.workspace }}/.ddev
          ddev nginx-config custom_files/crowdsec-prepend-nginx-site.conf
          cd ${{ github.workspace }}
          cp ${{env.EXTENSION_PATH}}/tests/end-to-end/php-scripts/cache-actions.php.dist ${{env.EXTENSION_PATH}}/scripts/public/cache-actions.php
          cp ${{env.EXTENSION_PATH}}/tests/end-to-end/php-scripts/geolocation-test.php.dist ${{env.EXTENSION_PATH}}/scripts/public/geolocation-test.php
          cp ${{env.EXTENSION_PATH}}/tests/end-to-end/settings/base.php.dist crowdsec-lib-settings.php
          sed -i -e 's/REPLACE_API_KEY/${{ env.BOUNCER_KEY }}/g' crowdsec-lib-settings.php
          sed -i -e 's/REPLACE_PROXY_IP/${{ env.PROXY_IP }}/g' crowdsec-lib-settings.php
          sed -i -e 's/REPLACE_FORCED_IP//g' crowdsec-lib-settings.php
          sed -i -e 's/REPLACE_FORCED_FORWARDED_IP//g' crowdsec-lib-settings.php
          mv crowdsec-lib-settings.php ${{env.EXTENSION_PATH}}/scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          chmod +x test-init.sh
          ./test-init.sh
          chmod +x run-tests.sh

      - name: Verify auto_prepend_file directive
        run: |
          cd ${{ github.workspace }}
          cp .ddev/custom_files/phpinfo.php ${{env.EXTENSION_PATH}}/scripts/public/phpinfo.php
          curl -v https://${{ env.PHP_VERSION_CODE }}.ddev.site/${{env.EXTENSION_PATH}}/scripts/public/phpinfo.php
          PREPENDVERIF=$(curl https://${{ env.PHP_VERSION_CODE }}.ddev.site/${{env.EXTENSION_PATH}}/scripts/public/phpinfo.php | grep -o -E "auto_prepend_file=(.*)php(.*)" | sed 's/<\/tr>//g; s/<\/td>//g;' | tr '\n' '#')
          if [[ $PREPENDVERIF == "auto_prepend_file=/var/www/html/${{env.EXTENSION_PATH}}/scripts/auto-prepend/bounce.php#auto_prepend_file=/var/www/html/my-own-modules/crowdsec-php-lib/scripts/auto-prepend/bounce.php#" ]]
          then
              echo "AUTO PREPEND FILE OK"
          else
              echo "AUTO PREPEND FILE KO"
              echo $PREPENDVERIF
              exit 1
          fi
            
      - name: Run "live mode with file_get_contents and without geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/1-live-mode.js"

      - name: Run "live mode with cURL and without geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27use_curl\x27 => false/\x27use_curl\x27 => true/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/1-live-mode.js"    

      - name: Run "live mode with file_get_contents and with geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27use_curl\x27 => true/\x27use_curl\x27 => false/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27enabled\x27 => false/\x27enabled\x27 => true/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27forced_test_forwarded_ip\x27 => \x27\x27/\x27forced_test_forwarded_ip\x27 => \x27${{env.JP_TEST_IP}}\x27/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/2-live-mode-with-geolocation.js"

      - name: Run "live mode with cURL and with geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27use_curl\x27 => false/\x27use_curl\x27 => true/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27use_curl\x27 => true/\x27use_curl\x27 => false/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27enabled\x27 => false/\x27enabled\x27 => true/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27forced_test_forwarded_ip\x27 => \x27\x27/\x27forced_test_forwarded_ip\x27 => \x27${{env.JP_TEST_IP}}\x27/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/2-live-mode-with-geolocation.js"   

      - name: Run "stream mode with file_get_contents and without geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27use_curl\x27 => true/\x27use_curl\x27 => false/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27enabled\x27 => true/\x27enabled\x27 => false/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27forced_test_forwarded_ip\x27 => \x27${{env.JP_TEST_IP}}\x27/\x27forced_test_forwarded_ip\x27 => \x27\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27stream_mode\x27 => false/\x27stream_mode\x27 => true/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/3-stream-mode.js"

      - name: Run "stream mode with cURL and without geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27use_curl\x27 => false/\x27use_curl\x27 => true/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27enabled\x27 => true/\x27enabled\x27 => false/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27forced_test_forwarded_ip\x27 => \x27${{env.JP_TEST_IP}}\x27/\x27forced_test_forwarded_ip\x27 => \x27\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27stream_mode\x27 => false/\x27stream_mode\x27 => true/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/3-stream-mode.js"    

      - name: Run "standalone geolocation" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/4-geolocation.js"

      - name: Run "live mode with IPv6" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27forced_test_forwarded_ip\x27 => \x27\x27/\x27forced_test_forwarded_ip\x27 => \x27${{env.IPV6_TEST_IP}}\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27forced_test_ip\x27 => \x27\x27/\x27forced_test_ip\x27 => \x27${{env.IPV6_TEST_PROXY_IP}}\x27/g' scripts/auto-prepend/settings.php
          sed -i -e 's/${{ env.PROXY_IP }}/${{env.IPV6_TEST_PROXY_IP}}/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27stream_mode\x27 => true/\x27stream_mode\x27 => false/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/1-live-mode.js"

      - name: Run "live mode with TLS auth" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27auth_type\x27 => \x27api_key\x27/\x27auth_type\x27 => \x27tls\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27api_key\x27 => \x27${{env.BOUNCER_KEY}}\x27/\x27api_key\x27 => \x27\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27tls_cert_path\x27 => \x27\x27/\x27tls_cert_path\x27 => \x27\/var\/www\/html\/cfssl\/bouncer.pem\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27tls_key_path\x27 => \x27\x27/\x27tls_key_path\x27 => \x27\/var\/www\/html\/cfssl\/bouncer-key.pem\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27tls_ca_cert_path\x27 => \x27\x27/\x27tls_ca_cert_path\x27 => \x27\/var\/www\/html\/cfssl\/ca-chain.pem\x27/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/1-live-mode.js"
          

      - name: Run "stream mode with TLS auth and cURL" test
        run: |
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}
          sed -i  's/\x27stream_mode\x27 => false/\x27stream_mode\x27 => true/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27forced_test_forwarded_ip\x27 => \x27${{env.IPV6_TEST_IP}}\x27/\x27forced_test_forwarded_ip\x27 => \x27\x27/g' scripts/auto-prepend/settings.php
          sed -i  's/\x27use_curl\x27 => false/\x27use_curl\x27 => true/g' scripts/auto-prepend/settings.php
          cat scripts/auto-prepend/settings.php
          cd ${{ github.workspace }}/${{env.EXTENSION_PATH}}/tests/end-to-end/__scripts__
          ./run-tests.sh ci "./__tests__/3-stream-mode.js"